tensor([6])
result [{'0000': 2, '1110': 4, '0010': 5, '0111': 8, '1101': 8, '1111': 3, '0101': 6, '1010': 9, '0011': 6, '0001': 10, '0110': 5, '1100': 3, '0100': 2, '1001': 10, '1000': 4, '1011': 15}, {'0000': 2, '1100': 2, '0100': 4, '1000': 3, '1010': 5, '0010': 3, '1110': 15, '0101': 2, '1001': 6, '1011': 12, '1111': 11, '1101': 9, '0011': 4, '0001': 2, '0110': 8, '0111': 12}, {'0110': 1, '1000': 7, '1010': 5, '1011': 11, '1100': 5, '0100': 4, '1110': 9, '0101': 4, '0001': 8, '0011': 6, '0111': 9, '1101': 7, '1111': 6, '0000': 5, '0010': 6, '1001': 7}, {'1110': 3, '1011': 3, '1010': 5, '0101': 8, '1111': 6, '1101': 7, '1001': 3, '1000': 9, '0001': 7, '0011': 4, '0111': 7, '0110': 3, '1100': 6, '0100': 9, '0010': 10, '0000': 10}, {'0000': 2, '0110': 6, '1001': 4, '1100': 5, '0100': 5, '0010': 5, '0101': 6, '1000': 8, '1110': 7, '0111': 9, '1101': 7, '1111': 7, '0001': 4, '0011': 10, '1010': 8, '1011': 7}, {'0000': 2, '0010': 4, '0001': 4, '0011': 3, '0111': 10, '1100': 6, '0100': 10, '0110': 10, '1010': 9, '1101': 9, '1111': 11, '1001': 5, '1011': 6, '0101': 3, '1110': 4, '1000': 4}, {'1110': 5, '0110': 8, '0000': 10, '0111': 4, '1101': 4, '1111': 2, '0001': 11, '0011': 5, '0101': 4, '1001': 6, '1010': 3, '0100': 8, '1100': 6, '1000': 7, '0010': 9, '1011': 8}, {'0111': 6, '0101': 5, '1011': 3, '1110': 4, '0110': 6, '1101': 6, '1111': 5, '0001': 8, '0011': 7, '1010': 3, '1000': 7, '0100': 5, '1100': 5, '1001': 6, '0000': 14, '0010': 10}, {'0101': 4, '1001': 5, '1010': 1, '1110': 1, '1000': 9, '1100': 3, '0100': 9, '0110': 3, '0011': 4, '0001': 12, '1111': 1, '1101': 2, '0010': 7, '0000': 39}, {'1001': 2, '0110': 3, '1110': 4, '1010': 10, '1000': 9, '0101': 6, '0011': 9, '0001': 6, '1100': 6, '0100': 5, '0111': 10, '1101': 5, '1111': 6, '0000': 5, '0010': 8, '1011': 6}]
Traceback (most recent call last):
  File "/Users/valenetjong/qiskit/hybridQNN/main.py", line 157, in <module>
    main()
  File "/Users/valenetjong/qiskit/hybridQNN/main.py", line 152, in main
    session.train()
  File "/Users/valenetjong/qiskit/hybridQNN/main.py", line 88, in train
    outputs = self.model(inputs)
  File "/Users/valenetjong/opt/anaconda3/envs/qiskit_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/valenetjong/qiskit/hybridQNN/hybridnet.py", line 28, in forward
    x = self.hybrid(x)
  File "/Users/valenetjong/opt/anaconda3/envs/qiskit_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/valenetjong/qiskit/hybridQNN/hybridlayers.py", line 103, in forward
    return HybridFunction.apply(input, self.quantum_circuit, self.shift)
  File "/Users/valenetjong/qiskit/hybridQNN/hybridlayers.py", line 69, in forward
    expectation_z = ctx.quantum_circuit.run(input[0].tolist())
  File "/Users/valenetjong/qiskit/hybridQNN/hybridlayers.py", line 49, in run
    states = np.array([el.keys().astype(float) for el in result])
  File "/Users/valenetjong/qiskit/hybridQNN/hybridlayers.py", line 49, in <listcomp>
    states = np.array([el.keys().astype(float) for el in result])
AttributeError: 'dict_keys' object has no attribute 'astype'