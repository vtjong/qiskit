tensor([6])
result {'1000': 6, '0001': 2, '0011': 7, '1011': 6, '0111': 5, '1010': 6, '1111': 8, '1101': 7, '1001': 4, '0110': 6, '1100': 6, '0100': 8, '1110': 11, '0000': 7, '0010': 8, '0101': 3}
counts [ 6  2  7  6  5  6  8  7  4  6  6  8 11  7  8  3]
states [1.000e+03 1.000e+00 1.100e+01 1.011e+03 1.110e+02 1.010e+03 1.111e+03
 1.101e+03 1.001e+03 1.100e+02 1.100e+03 1.000e+02 1.110e+03 0.000e+00
 1.000e+01 1.010e+02]
/Users/valenetjong/qiskit/hybridQNN/hybridnet.py:29: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  return F.log_softmax(x)
Traceback (most recent call last):
  File "/Users/valenetjong/qiskit/hybridQNN/main.py", line 157, in <module>
    main()
  File "/Users/valenetjong/qiskit/hybridQNN/main.py", line 152, in main
    session.train()
  File "/Users/valenetjong/qiskit/hybridQNN/main.py", line 89, in train
    loss = error(outputs, labels)
  File "/Users/valenetjong/opt/anaconda3/envs/qiskit_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/valenetjong/opt/anaconda3/envs/qiskit_env/lib/python3.9/site-packages/torch/nn/modules/loss.py", line 211, in forward
    return F.nll_loss(input, target, weight=self.weight, ignore_index=self.ignore_index, reduction=self.reduction)
  File "/Users/valenetjong/opt/anaconda3/envs/qiskit_env/lib/python3.9/site-packages/torch/nn/functional.py", line 2532, in nll_loss
    return torch._C._nn.nll_loss_nd(input, target, weight, _Reduction.get_enum(reduction), ignore_index)
IndexError: Target 6 is out of bounds.