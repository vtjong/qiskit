/Users/valenetjong/qiskit/hybridlayers.py:67: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  ../torch/csrc/utils/tensor_new.cpp:201.)
  result = torch.tensor([expectation_z])
/Users/valenetjong/qiskit/hybridlayers.py:88: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  gradients = np.array([gradients]).T
Training [5%]	Loss: -0.7738
Training [10%]	Loss: -0.9190
Training [15%]	Loss: -0.9350
Training [20%]	Loss: -0.9418
Training [25%]	Loss: -0.9496
Training [30%]	Loss: -0.9558
Training [35%]	Loss: -0.9560
Training [40%]	Loss: -0.9578
Training [45%]	Loss: -0.9708
Training [50%]	Loss: -0.9671
Training [55%]	Loss: -0.9774
Training [60%]	Loss: -0.9734
Training [65%]	Loss: -0.9848
Training [70%]	Loss: -0.9839
Training [75%]	Loss: -0.9890
Training [80%]	Loss: -0.9884
Training [85%]	Loss: -0.9861
Training [90%]	Loss: -0.9907
Training [95%]	Loss: -0.9907
Training [100%]	Loss: -0.9936