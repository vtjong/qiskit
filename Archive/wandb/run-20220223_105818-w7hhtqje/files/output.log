/Users/valenetjong/qiskit/hybridlayers.py:67: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  ../torch/csrc/utils/tensor_new.cpp:201.)
  result = torch.tensor([expectation_z])
/Users/valenetjong/qiskit/hybridlayers.py:88: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  gradients = np.array([gradients]).T
Training [5%]	Loss: -0.7763
Training [10%]	Loss: -0.9125
Training [15%]	Loss: -0.9351
Training [20%]	Loss: -0.9418
Training [25%]	Loss: -0.9518
Training [30%]	Loss: -0.9587
Training [35%]	Loss: -0.9576
Training [40%]	Loss: -0.9583
Training [45%]	Loss: -0.9689
Training [50%]	Loss: -0.9668
Training [55%]	Loss: -0.9776
Training [60%]	Loss: -0.9778
Training [65%]	Loss: -0.9836
Training [70%]	Loss: -0.9847
Training [75%]	Loss: -0.9894
Training [80%]	Loss: -0.9896
Training [85%]	Loss: -0.9864
Training [90%]	Loss: -0.9899
Training [95%]	Loss: -0.9912
Training [100%]	Loss: -0.9916
Traceback (most recent call last):
  File "/Users/valenetjong/qiskit/main.py", line 157, in <module>
    main()
  File "/Users/valenetjong/qiskit/main.py", line 153, in main
    session.test()
  File "/Users/valenetjong/qiskit/main.py", line 107, in test
    error = nn.NLLLoss()()
  File "/Users/valenetjong/opt/anaconda3/envs/qiskit_env/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'input' and 'target'